<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
	
	<!--  @Controller, @Service, @Repository, @Component -->
	<context:component-scan base-package="kr.or.ddit" use-default-filters="false">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
		<context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
	</context:component-scan>
	
	<mvc:annotation-driven/>
	<mvc:default-servlet-handler/>
	
	
	<!-- 복수개의 viewResolver를 사용할 경우 우선순위를 가장 늦게 배정 
		viewName이 유효한지(존재하는지)와 관계 없이 무조건 처리
	-->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 	위에서도여기서도 자동완성 가능 internalResource + cantrol+ space 하니까 -->
		<property name="prefix" value="/WEB-INF/views/"/>
		<property name="suffix" value=".jsp"/>
		<property name="order" value="2"/>
	</bean>
	
	<!-- controller 리턴하는 view 이름과 동일한 spring bean이 존재하면 해당 view에 위임 -->
	<bean class= "org.springframework.web.servlet.view.BeanNameViewResolver">
		<property name="order" value="1"/>
	</bean>
	
	<!-- 
		ex : controller.method가 'user/user'라는 viewName을 리턴
		1. 우선순위에 따라 beanNameViewResolve 가 'user/user'와 동일한 spring bean이 있는지 확인 : 없은확인
		2. 후순위에 따라서 internalResourceViewResolve가 profix+"user/user"+suffix로 forward
		
		ex:controller.method가 'jsonView'viewName을 리턴
		1. 우선순위에 따라 beanNameViewResolve 가 'user/user'와 동일한 spring bean이 있는지 확인 : 있음
		2. 해당 SpringBean(jsonView)에게 응답을 생성하도록 요청
	 -->
	
	
	
	<!--controller에서 model 객체에 넣은 속성을 응답을 json으로 만들어주는 view -->
	<bean id="jsonView" class="org.springframework.web.servlet.view.json.MappingJackson2JsonView"/>	
	
	<!-- profile 이미지를 처리해주는 view -->
	<bean id ="profileView" class="kr.or.ddit.view.ProfileView"/>
	
	<!--  사용자 엑셀정보를 처리해주는 view -->
	<bean id="userExcelView" class="kr.or.ddit.view.ExcelDownloadView"/>
	
	<!-- multipart resolver -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSizePerFile" value="3145728"/>
		<property name="maxUploadSize" value="15728640"/>
	</bean>
	
	<!-- messageSource -->
	<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
	<property name="basenames">
		<list>
			<value>classpath:kr/or/ddit/msg/error</value>
		</list>
	</property>
	</bean>

</beans>
